use poker_tx_holdem::deal;

#[test]
fn pdf_examples() {
    let cases: [([u32;9], &[&str]); 10] = [
        ([ 9, 8, 7, 6, 5, 4, 3, 2, 1 ], &["2C","3C","4C","5C","6C"]),
        ([ 40, 41, 42, 43, 48, 49, 50, 51, 52 ], &["10S","11S","12S","13S","1S"]),
        ([ 40, 41, 27, 28, 1, 14, 15, 42, 29 ], &["1C","1D","1H","1S"]),
        ([ 30, 13, 27, 44, 12, 17, 33, 41, 43 ], &["4D","4H","4S"]),
        ([ 27, 45, 3, 48, 44, 43, 41, 33, 12 ], &["2S","4S","5S","6S","9S"]),
        ([ 17, 31, 30, 51, 44, 43, 41, 33, 12 ], &["4D","4H","4S"]),
        ([ 17, 39, 30, 52, 44, 25, 41, 51, 12 ], &["12C","12D","12S","13H","13S"]),
        ([ 11, 25, 9, 39, 50, 48, 3, 49, 45 ], &["10S","11S","12D","13H","9S"]),
        ([ 50, 26, 39, 3, 11, 27, 20, 48, 52 ], &["11C","11S","13H","13S"]),
        ([ 40, 52, 46, 11, 48, 27, 29, 32, 37 ], &["1H","1S"]),
    ];

    for (input, expect) in cases {
        let got = deal(input);
        let expect_vec: Vec<String> = expect.iter().map(|s| s.to_string()).collect();
        assert_eq!(got, expect_vec, "failed with input: {:?}", input);
    }
}
